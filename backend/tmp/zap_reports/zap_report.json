{
	"@programName": "ZAP",
	"@version": "2.16.0",
	"@generated": "Sun, 23 Feb 2025 00:04:47",
	"site":[ 
		{
			"@name": "https://hackthissite.org",
			"@host": "hackthissite.org",
			"@port": "443",
			"@ssl": "true",
			"alerts": [ 
				{
					"pluginid": "10055",
					"alertRef": "10055-4",
					"alert": "CSP: Wildcard Directive",
					"name": "CSP: Wildcard Directive",
					"riskcode": "2",
					"confidence": "3",
					"riskdesc": "Medium (High)",
					"desc": "<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</p>",
					"instances":[ 
						{
							"id": "41",
							"uri": "https://hackthissite.org/",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "child-src 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org discord.com; form-action 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org; upgrade-insecure-requests; report-uri https://hackthissite.report-uri.com/r/d/csp/enforce",
							"otherinfo": "The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:\nscript-src, style-src, img-src, connect-src, frame-ancestors, font-src, media-src, object-src, manifest-src\n\nThe directive(s): frame-ancestors are among the directives that do not fallback to default-src, missing/excluding them is the same as allowing anything."
						},
						{
							"id": "23",
							"uri": "https://hackthissite.org/hp.php",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "child-src 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org discord.com; form-action 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org; upgrade-insecure-requests; report-uri https://hackthissite.report-uri.com/r/d/csp/enforce",
							"otherinfo": "The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:\nscript-src, style-src, img-src, connect-src, frame-ancestors, font-src, media-src, object-src, manifest-src\n\nThe directive(s): frame-ancestors are among the directives that do not fallback to default-src, missing/excluding them is the same as allowing anything."
						},
						{
							"id": "18",
							"uri": "https://hackthissite.org/killing/all/humans/",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "child-src 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org discord.com; form-action 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org; upgrade-insecure-requests; report-uri https://hackthissite.report-uri.com/r/d/csp/enforce",
							"otherinfo": "The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:\nscript-src, style-src, img-src, connect-src, frame-ancestors, font-src, media-src, object-src, manifest-src\n\nThe directive(s): frame-ancestors are among the directives that do not fallback to default-src, missing/excluding them is the same as allowing anything."
						},
						{
							"id": "19",
							"uri": "https://hackthissite.org/missions/",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "child-src 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org discord.com; form-action 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org; upgrade-insecure-requests; report-uri https://hackthissite.report-uri.com/r/d/csp/enforce",
							"otherinfo": "The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:\nscript-src, style-src, img-src, connect-src, frame-ancestors, font-src, media-src, object-src, manifest-src\n\nThe directive(s): frame-ancestors are among the directives that do not fallback to default-src, missing/excluding them is the same as allowing anything."
						},
						{
							"id": "20",
							"uri": "https://hackthissite.org/sitemap.xml",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "child-src 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org discord.com; form-action 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org; upgrade-insecure-requests; report-uri https://hackthissite.report-uri.com/r/d/csp/enforce",
							"otherinfo": "The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:\nscript-src, style-src, img-src, connect-src, frame-ancestors, font-src, media-src, object-src, manifest-src\n\nThe directive(s): frame-ancestors are among the directives that do not fallback to default-src, missing/excluding them is the same as allowing anything."
						}
					],
					"count": "5",
					"solution": "<p>Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.</p>",
					"otherinfo": "<p>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:</p><p>script-src, style-src, img-src, connect-src, frame-ancestors, font-src, media-src, object-src, manifest-src</p><p></p><p>The directive(s): frame-ancestors are among the directives that do not fallback to default-src, missing/excluding them is the same as allowing anything.</p>",
					"reference": "<p>https://www.w3.org/TR/CSP/</p><p>https://caniuse.com/#search=content+security+policy</p><p>https://content-security-policy.com/</p><p>https://github.com/HtmlUnit/htmlunit-csp</p><p>https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources</p>",
					"cweid": "693",
					"wascid": "15",
					"sourceid": "19"
				},
				{
					"pluginid": "10055",
					"alertRef": "10055-5",
					"alert": "CSP: script-src unsafe-inline",
					"name": "CSP: script-src unsafe-inline",
					"riskcode": "2",
					"confidence": "3",
					"riskdesc": "Medium (High)",
					"desc": "<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</p>",
					"instances":[ 
						{
							"id": "43",
							"uri": "https://hackthissite.org/",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "child-src 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org discord.com; form-action 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org; upgrade-insecure-requests; report-uri https://hackthissite.report-uri.com/r/d/csp/enforce",
							"otherinfo": "script-src includes unsafe-inline."
						},
						{
							"id": "25",
							"uri": "https://hackthissite.org/hp.php",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "child-src 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org discord.com; form-action 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org; upgrade-insecure-requests; report-uri https://hackthissite.report-uri.com/r/d/csp/enforce",
							"otherinfo": "script-src includes unsafe-inline."
						},
						{
							"id": "22",
							"uri": "https://hackthissite.org/killing/all/humans/",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "child-src 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org discord.com; form-action 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org; upgrade-insecure-requests; report-uri https://hackthissite.report-uri.com/r/d/csp/enforce",
							"otherinfo": "script-src includes unsafe-inline."
						},
						{
							"id": "29",
							"uri": "https://hackthissite.org/missions/",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "child-src 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org discord.com; form-action 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org; upgrade-insecure-requests; report-uri https://hackthissite.report-uri.com/r/d/csp/enforce",
							"otherinfo": "script-src includes unsafe-inline."
						},
						{
							"id": "24",
							"uri": "https://hackthissite.org/sitemap.xml",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "child-src 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org discord.com; form-action 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org; upgrade-insecure-requests; report-uri https://hackthissite.report-uri.com/r/d/csp/enforce",
							"otherinfo": "script-src includes unsafe-inline."
						}
					],
					"count": "5",
					"solution": "<p>Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.</p>",
					"otherinfo": "<p>script-src includes unsafe-inline.</p>",
					"reference": "<p>https://www.w3.org/TR/CSP/</p><p>https://caniuse.com/#search=content+security+policy</p><p>https://content-security-policy.com/</p><p>https://github.com/HtmlUnit/htmlunit-csp</p><p>https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources</p>",
					"cweid": "693",
					"wascid": "15",
					"sourceid": "19"
				},
				{
					"pluginid": "10055",
					"alertRef": "10055-6",
					"alert": "CSP: style-src unsafe-inline",
					"name": "CSP: style-src unsafe-inline",
					"riskcode": "2",
					"confidence": "3",
					"riskdesc": "Medium (High)",
					"desc": "<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</p>",
					"instances":[ 
						{
							"id": "44",
							"uri": "https://hackthissite.org/",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "child-src 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org discord.com; form-action 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org; upgrade-insecure-requests; report-uri https://hackthissite.report-uri.com/r/d/csp/enforce",
							"otherinfo": "style-src includes unsafe-inline."
						},
						{
							"id": "33",
							"uri": "https://hackthissite.org/hp.php",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "child-src 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org discord.com; form-action 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org; upgrade-insecure-requests; report-uri https://hackthissite.report-uri.com/r/d/csp/enforce",
							"otherinfo": "style-src includes unsafe-inline."
						},
						{
							"id": "27",
							"uri": "https://hackthissite.org/killing/all/humans/",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "child-src 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org discord.com; form-action 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org; upgrade-insecure-requests; report-uri https://hackthissite.report-uri.com/r/d/csp/enforce",
							"otherinfo": "style-src includes unsafe-inline."
						},
						{
							"id": "35",
							"uri": "https://hackthissite.org/missions/",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "child-src 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org discord.com; form-action 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org; upgrade-insecure-requests; report-uri https://hackthissite.report-uri.com/r/d/csp/enforce",
							"otherinfo": "style-src includes unsafe-inline."
						},
						{
							"id": "28",
							"uri": "https://hackthissite.org/sitemap.xml",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "child-src 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org discord.com; form-action 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org; upgrade-insecure-requests; report-uri https://hackthissite.report-uri.com/r/d/csp/enforce",
							"otherinfo": "style-src includes unsafe-inline."
						}
					],
					"count": "5",
					"solution": "<p>Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.</p>",
					"otherinfo": "<p>style-src includes unsafe-inline.</p>",
					"reference": "<p>https://www.w3.org/TR/CSP/</p><p>https://caniuse.com/#search=content+security+policy</p><p>https://content-security-policy.com/</p><p>https://github.com/HtmlUnit/htmlunit-csp</p><p>https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources</p>",
					"cweid": "693",
					"wascid": "15",
					"sourceid": "19"
				},
				{
					"pluginid": "10098",
					"alertRef": "10098",
					"alert": "Cross-Domain Misconfiguration",
					"name": "Cross-Domain Misconfiguration",
					"riskcode": "2",
					"confidence": "2",
					"riskdesc": "Medium (Medium)",
					"desc": "<p>Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.</p>",
					"instances":[ 
						{
							"id": "49",
							"uri": "https://hackthissite.org/",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "Access-Control-Allow-Origin: *",
							"otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
						},
						{
							"id": "38",
							"uri": "https://hackthissite.org/hp.php",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "Access-Control-Allow-Origin: *",
							"otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
						},
						{
							"id": "31",
							"uri": "https://hackthissite.org/killing/all/humans/",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "Access-Control-Allow-Origin: *",
							"otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
						},
						{
							"id": "32",
							"uri": "https://hackthissite.org/manifest.webmanifest",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "Access-Control-Allow-Origin: *",
							"otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
						},
						{
							"id": "42",
							"uri": "https://hackthissite.org/missions/",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "Access-Control-Allow-Origin: *",
							"otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
						},
						{
							"id": "21",
							"uri": "https://hackthissite.org/robots.txt",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "Access-Control-Allow-Origin: *",
							"otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
						},
						{
							"id": "37",
							"uri": "https://hackthissite.org/sitemap.xml",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "Access-Control-Allow-Origin: *",
							"otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
						}
					],
					"count": "7",
					"solution": "<p>Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).</p><p>Configure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.</p>",
					"otherinfo": "<p>The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.</p>",
					"reference": "<p>https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy</p>",
					"cweid": "264",
					"wascid": "14",
					"sourceid": "19"
				},
				{
					"pluginid": "10020",
					"alertRef": "10020-1",
					"alert": "Missing Anti-clickjacking Header",
					"name": "Missing Anti-clickjacking Header",
					"riskcode": "2",
					"confidence": "2",
					"riskdesc": "Medium (Medium)",
					"desc": "<p>The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.</p>",
					"instances":[ 
						{
							"id": "34",
							"uri": "https://hackthissite.org/",
							"method": "GET",
							"param": "x-frame-options",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						}
					],
					"count": "1",
					"solution": "<p>Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.</p><p>If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.</p>",
					"otherinfo": "",
					"reference": "<p>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options</p>",
					"cweid": "1021",
					"wascid": "15",
					"sourceid": "19"
				},
				{
					"pluginid": "10055",
					"alertRef": "10055-3",
					"alert": "CSP: Notices",
					"name": "CSP: Notices",
					"riskcode": "1",
					"confidence": "3",
					"riskdesc": "Low (High)",
					"desc": "<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</p>",
					"instances":[ 
						{
							"id": "36",
							"uri": "https://hackthissite.org/",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "child-src 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org discord.com; form-action 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org; upgrade-insecure-requests; report-uri https://hackthissite.report-uri.com/r/d/csp/enforce",
							"otherinfo": "Warnings:\nThe report-uri directive has been deprecated in favor of the new report-to directive\n"
						},
						{
							"id": "17",
							"uri": "https://hackthissite.org/hp.php",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "child-src 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org discord.com; form-action 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org; upgrade-insecure-requests; report-uri https://hackthissite.report-uri.com/r/d/csp/enforce",
							"otherinfo": "Warnings:\nThe report-uri directive has been deprecated in favor of the new report-to directive\n"
						},
						{
							"id": "13",
							"uri": "https://hackthissite.org/killing/all/humans/",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "child-src 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org discord.com; form-action 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org; upgrade-insecure-requests; report-uri https://hackthissite.report-uri.com/r/d/csp/enforce",
							"otherinfo": "Warnings:\nThe report-uri directive has been deprecated in favor of the new report-to directive\n"
						},
						{
							"id": "14",
							"uri": "https://hackthissite.org/missions/",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "child-src 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org discord.com; form-action 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org; upgrade-insecure-requests; report-uri https://hackthissite.report-uri.com/r/d/csp/enforce",
							"otherinfo": "Warnings:\nThe report-uri directive has been deprecated in favor of the new report-to directive\n"
						},
						{
							"id": "15",
							"uri": "https://hackthissite.org/sitemap.xml",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "child-src 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org discord.com; form-action 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org; upgrade-insecure-requests; report-uri https://hackthissite.report-uri.com/r/d/csp/enforce",
							"otherinfo": "Warnings:\nThe report-uri directive has been deprecated in favor of the new report-to directive\n"
						}
					],
					"count": "5",
					"solution": "<p>Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.</p>",
					"otherinfo": "<p>Warnings:</p><p>The report-uri directive has been deprecated in favor of the new report-to directive</p><p></p>",
					"reference": "<p>https://www.w3.org/TR/CSP/</p><p>https://caniuse.com/#search=content+security+policy</p><p>https://content-security-policy.com/</p><p>https://github.com/HtmlUnit/htmlunit-csp</p><p>https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources</p>",
					"cweid": "693",
					"wascid": "15",
					"sourceid": "19"
				},
				{
					"pluginid": "10010",
					"alertRef": "10010",
					"alert": "Cookie No HttpOnly Flag",
					"name": "Cookie No HttpOnly Flag",
					"riskcode": "1",
					"confidence": "2",
					"riskdesc": "Low (Medium)",
					"desc": "<p>A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.</p>",
					"instances":[ 
						{
							"id": "45",
							"uri": "https://hackthissite.org/",
							"method": "GET",
							"param": "HackThisSite",
							"attack": "",
							"evidence": "Set-Cookie: HackThisSite",
							"otherinfo": ""
						}
					],
					"count": "1",
					"solution": "<p>Ensure that the HttpOnly flag is set for all cookies.</p>",
					"otherinfo": "",
					"reference": "<p>https://owasp.org/www-community/HttpOnly</p>",
					"cweid": "1004",
					"wascid": "13",
					"sourceid": "19"
				},
				{
					"pluginid": "10011",
					"alertRef": "10011",
					"alert": "Cookie Without Secure Flag",
					"name": "Cookie Without Secure Flag",
					"riskcode": "1",
					"confidence": "2",
					"riskdesc": "Low (Medium)",
					"desc": "<p>A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.</p>",
					"instances":[ 
						{
							"id": "47",
							"uri": "https://hackthissite.org/",
							"method": "GET",
							"param": "HackThisSite",
							"attack": "",
							"evidence": "Set-Cookie: HackThisSite",
							"otherinfo": ""
						}
					],
					"count": "1",
					"solution": "<p>Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.</p>",
					"otherinfo": "",
					"reference": "<p>https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html</p>",
					"cweid": "614",
					"wascid": "13",
					"sourceid": "19"
				},
				{
					"pluginid": "10054",
					"alertRef": "10054-1",
					"alert": "Cookie without SameSite Attribute",
					"name": "Cookie without SameSite Attribute",
					"riskcode": "1",
					"confidence": "2",
					"riskdesc": "Low (Medium)",
					"desc": "<p>A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.</p>",
					"instances":[ 
						{
							"id": "46",
							"uri": "https://hackthissite.org/",
							"method": "GET",
							"param": "HackThisSite",
							"attack": "",
							"evidence": "Set-Cookie: HackThisSite",
							"otherinfo": ""
						}
					],
					"count": "1",
					"solution": "<p>Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.</p>",
					"otherinfo": "",
					"reference": "<p>https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site</p>",
					"cweid": "1275",
					"wascid": "13",
					"sourceid": "19"
				},
				{
					"pluginid": "10017",
					"alertRef": "10017",
					"alert": "Cross-Domain JavaScript Source File Inclusion",
					"name": "Cross-Domain JavaScript Source File Inclusion",
					"riskcode": "1",
					"confidence": "2",
					"riskdesc": "Low (Medium)",
					"desc": "<p>The page includes one or more script files from a third-party domain.</p>",
					"instances":[ 
						{
							"id": "52",
							"uri": "https://hackthissite.org/",
							"method": "GET",
							"param": "https://data.htscdn.org/js/jquery-1.8.1.min.js",
							"attack": "",
							"evidence": "<script type=\"text/javascript\" src=\"https://data.htscdn.org/js/jquery-1.8.1.min.js\"></script>",
							"otherinfo": ""
						}
					],
					"count": "1",
					"solution": "<p>Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.</p>",
					"otherinfo": "",
					"reference": "",
					"cweid": "829",
					"wascid": "15",
					"sourceid": "19"
				},
				{
					"pluginid": "10021",
					"alertRef": "10021",
					"alert": "X-Content-Type-Options Header Missing",
					"name": "X-Content-Type-Options Header Missing",
					"riskcode": "1",
					"confidence": "2",
					"riskdesc": "Low (Medium)",
					"desc": "<p>The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.</p>",
					"instances":[ 
						{
							"id": "54",
							"uri": "https://hackthissite.org/",
							"method": "GET",
							"param": "x-content-type-options",
							"attack": "",
							"evidence": "",
							"otherinfo": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses."
						},
						{
							"id": "40",
							"uri": "https://hackthissite.org/manifest.webmanifest",
							"method": "GET",
							"param": "x-content-type-options",
							"attack": "",
							"evidence": "",
							"otherinfo": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses."
						},
						{
							"id": "30",
							"uri": "https://hackthissite.org/robots.txt",
							"method": "GET",
							"param": "x-content-type-options",
							"attack": "",
							"evidence": "",
							"otherinfo": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses."
						}
					],
					"count": "3",
					"solution": "<p>Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.</p><p>If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.</p>",
					"otherinfo": "<p>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.</p><p>At \"High\" threshold this scan rule will not alert on client or server error responses.</p>",
					"reference": "<p>https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)</p><p>https://owasp.org/www-community/Security_Headers</p>",
					"cweid": "693",
					"wascid": "15",
					"sourceid": "19"
				},
				{
					"pluginid": "10019",
					"alertRef": "10019-1",
					"alert": "Content-Type Header Missing",
					"name": "Content-Type Header Missing",
					"riskcode": "0",
					"confidence": "2",
					"riskdesc": "Informational (Medium)",
					"desc": "<p>The Content-Type header was either missing or empty.</p>",
					"instances":[ 
						{
							"id": "26",
							"uri": "https://hackthissite.org/manifest.webmanifest",
							"method": "GET",
							"param": "content-type",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						}
					],
					"count": "1",
					"solution": "<p>Ensure each page is setting the specific and appropriate content-type value for the content being delivered.</p>",
					"otherinfo": "",
					"reference": "<p>https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)</p>",
					"cweid": "345",
					"wascid": "12",
					"sourceid": "24"
				},
				{
					"pluginid": "10109",
					"alertRef": "10109",
					"alert": "Modern Web Application",
					"name": "Modern Web Application",
					"riskcode": "0",
					"confidence": "2",
					"riskdesc": "Informational (Medium)",
					"desc": "<p>The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.</p>",
					"instances":[ 
						{
							"id": "53",
							"uri": "https://hackthissite.org/",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<a class=\"nav\" href=\"\"></a>",
							"otherinfo": "Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application."
						}
					],
					"count": "1",
					"solution": "<p>This is an informational alert and so no changes are required.</p>",
					"otherinfo": "<p>Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.</p>",
					"reference": "",
					"cweid": "-1",
					"wascid": "-1",
					"sourceid": "19"
				},
				{
					"pluginid": "10015",
					"alertRef": "10015",
					"alert": "Re-examine Cache-control Directives",
					"name": "Re-examine Cache-control Directives",
					"riskcode": "0",
					"confidence": "1",
					"riskdesc": "Informational (Low)",
					"desc": "<p>The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.</p>",
					"instances":[ 
						{
							"id": "16",
							"uri": "https://hackthissite.org/robots.txt",
							"method": "GET",
							"param": "cache-control",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						}
					],
					"count": "1",
					"solution": "<p>For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".</p>",
					"otherinfo": "",
					"reference": "<p>https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching</p><p>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control</p><p>https://grayduck.mn/2021/09/13/cache-control-recommendations/</p>",
					"cweid": "525",
					"wascid": "13",
					"sourceid": "12"
				},
				{
					"pluginid": "10112",
					"alertRef": "10112",
					"alert": "Session Management Response Identified",
					"name": "Session Management Response Identified",
					"riskcode": "0",
					"confidence": "2",
					"riskdesc": "Informational (Medium)",
					"desc": "<p>The given response has been identified as containing a session management token. The 'Other Info' field contains a set of header tokens that can be used in the Header Based Session Management Method. If the request is in a context which has a Session Management Method set to \"Auto-Detect\" then this rule will change the session management to use the tokens identified.</p>",
					"instances":[ 
						{
							"id": "55",
							"uri": "https://hackthissite.org/",
							"method": "GET",
							"param": "HackThisSite",
							"attack": "",
							"evidence": "1lthe9njni1vqdq2ho7krkm907",
							"otherinfo": "\ncookie:HackThisSite"
						},
						{
							"id": "12",
							"uri": "https://hackthissite.org/",
							"method": "GET",
							"param": "HackThisSite",
							"attack": "",
							"evidence": "1lthe9njni1vqdq2ho7krkm907",
							"otherinfo": "\ncookie:HackThisSite"
						}
					],
					"count": "2",
					"solution": "<p>This is an informational alert rather than a vulnerability and so there is nothing to fix.</p>",
					"otherinfo": "<p></p><p>cookie:HackThisSite</p>",
					"reference": "<p>https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id</p>",
					"cweid": "-1",
					"wascid": "-1",
					"sourceid": "19"
				}
			]
		},
		{
			"@name": "http://hackthissite.org",
			"@host": "hackthissite.org",
			"@port": "80",
			"@ssl": "false",
			"alerts": [ 
				{
					"pluginid": "10055",
					"alertRef": "10055-4",
					"alert": "CSP: Wildcard Directive",
					"name": "CSP: Wildcard Directive",
					"riskcode": "2",
					"confidence": "3",
					"riskdesc": "Medium (High)",
					"desc": "<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</p>",
					"instances":[ 
						{
							"id": "2",
							"uri": "http://hackthissite.org",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "child-src 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org discord.com; form-action 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org; upgrade-insecure-requests; report-uri https://hackthissite.report-uri.com/r/d/csp/enforce",
							"otherinfo": "The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:\nscript-src, style-src, img-src, connect-src, frame-ancestors, font-src, media-src, object-src, manifest-src\n\nThe directive(s): frame-ancestors are among the directives that do not fallback to default-src, missing/excluding them is the same as allowing anything."
						}
					],
					"count": "1",
					"solution": "<p>Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.</p>",
					"otherinfo": "<p>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:</p><p>script-src, style-src, img-src, connect-src, frame-ancestors, font-src, media-src, object-src, manifest-src</p><p></p><p>The directive(s): frame-ancestors are among the directives that do not fallback to default-src, missing/excluding them is the same as allowing anything.</p>",
					"reference": "<p>https://www.w3.org/TR/CSP/</p><p>https://caniuse.com/#search=content+security+policy</p><p>https://content-security-policy.com/</p><p>https://github.com/HtmlUnit/htmlunit-csp</p><p>https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources</p>",
					"cweid": "693",
					"wascid": "15",
					"sourceid": "1"
				},
				{
					"pluginid": "10055",
					"alertRef": "10055-5",
					"alert": "CSP: script-src unsafe-inline",
					"name": "CSP: script-src unsafe-inline",
					"riskcode": "2",
					"confidence": "3",
					"riskdesc": "Medium (High)",
					"desc": "<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</p>",
					"instances":[ 
						{
							"id": "3",
							"uri": "http://hackthissite.org",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "child-src 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org discord.com; form-action 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org; upgrade-insecure-requests; report-uri https://hackthissite.report-uri.com/r/d/csp/enforce",
							"otherinfo": "script-src includes unsafe-inline."
						}
					],
					"count": "1",
					"solution": "<p>Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.</p>",
					"otherinfo": "<p>script-src includes unsafe-inline.</p>",
					"reference": "<p>https://www.w3.org/TR/CSP/</p><p>https://caniuse.com/#search=content+security+policy</p><p>https://content-security-policy.com/</p><p>https://github.com/HtmlUnit/htmlunit-csp</p><p>https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources</p>",
					"cweid": "693",
					"wascid": "15",
					"sourceid": "1"
				},
				{
					"pluginid": "10055",
					"alertRef": "10055-6",
					"alert": "CSP: style-src unsafe-inline",
					"name": "CSP: style-src unsafe-inline",
					"riskcode": "2",
					"confidence": "3",
					"riskdesc": "Medium (High)",
					"desc": "<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</p>",
					"instances":[ 
						{
							"id": "4",
							"uri": "http://hackthissite.org",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "child-src 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org discord.com; form-action 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org; upgrade-insecure-requests; report-uri https://hackthissite.report-uri.com/r/d/csp/enforce",
							"otherinfo": "style-src includes unsafe-inline."
						}
					],
					"count": "1",
					"solution": "<p>Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.</p>",
					"otherinfo": "<p>style-src includes unsafe-inline.</p>",
					"reference": "<p>https://www.w3.org/TR/CSP/</p><p>https://caniuse.com/#search=content+security+policy</p><p>https://content-security-policy.com/</p><p>https://github.com/HtmlUnit/htmlunit-csp</p><p>https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources</p>",
					"cweid": "693",
					"wascid": "15",
					"sourceid": "1"
				},
				{
					"pluginid": "10098",
					"alertRef": "10098",
					"alert": "Cross-Domain Misconfiguration",
					"name": "Cross-Domain Misconfiguration",
					"riskcode": "2",
					"confidence": "2",
					"riskdesc": "Medium (Medium)",
					"desc": "<p>Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.</p>",
					"instances":[ 
						{
							"id": "7",
							"uri": "http://hackthissite.org",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "Access-Control-Allow-Origin: *",
							"otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
						}
					],
					"count": "1",
					"solution": "<p>Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).</p><p>Configure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.</p>",
					"otherinfo": "<p>The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.</p>",
					"reference": "<p>https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy</p>",
					"cweid": "264",
					"wascid": "14",
					"sourceid": "1"
				},
				{
					"pluginid": "10020",
					"alertRef": "10020-1",
					"alert": "Missing Anti-clickjacking Header",
					"name": "Missing Anti-clickjacking Header",
					"riskcode": "2",
					"confidence": "2",
					"riskdesc": "Medium (Medium)",
					"desc": "<p>The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.</p>",
					"instances":[ 
						{
							"id": "0",
							"uri": "http://hackthissite.org",
							"method": "GET",
							"param": "x-frame-options",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						}
					],
					"count": "1",
					"solution": "<p>Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.</p><p>If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.</p>",
					"otherinfo": "",
					"reference": "<p>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options</p>",
					"cweid": "1021",
					"wascid": "15",
					"sourceid": "1"
				},
				{
					"pluginid": "10055",
					"alertRef": "10055-3",
					"alert": "CSP: Notices",
					"name": "CSP: Notices",
					"riskcode": "1",
					"confidence": "3",
					"riskdesc": "Low (High)",
					"desc": "<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</p>",
					"instances":[ 
						{
							"id": "1",
							"uri": "http://hackthissite.org",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "child-src 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org discord.com; form-action 'self' hackthissite.org *.hackthissite.org htscdn.org *.htscdn.org; upgrade-insecure-requests; report-uri https://hackthissite.report-uri.com/r/d/csp/enforce",
							"otherinfo": "Warnings:\nThe report-uri directive has been deprecated in favor of the new report-to directive\n"
						}
					],
					"count": "1",
					"solution": "<p>Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.</p>",
					"otherinfo": "<p>Warnings:</p><p>The report-uri directive has been deprecated in favor of the new report-to directive</p><p></p>",
					"reference": "<p>https://www.w3.org/TR/CSP/</p><p>https://caniuse.com/#search=content+security+policy</p><p>https://content-security-policy.com/</p><p>https://github.com/HtmlUnit/htmlunit-csp</p><p>https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources</p>",
					"cweid": "693",
					"wascid": "15",
					"sourceid": "1"
				},
				{
					"pluginid": "10010",
					"alertRef": "10010",
					"alert": "Cookie No HttpOnly Flag",
					"name": "Cookie No HttpOnly Flag",
					"riskcode": "1",
					"confidence": "2",
					"riskdesc": "Low (Medium)",
					"desc": "<p>A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.</p>",
					"instances":[ 
						{
							"id": "5",
							"uri": "http://hackthissite.org",
							"method": "GET",
							"param": "HackThisSite",
							"attack": "",
							"evidence": "Set-Cookie: HackThisSite",
							"otherinfo": ""
						}
					],
					"count": "1",
					"solution": "<p>Ensure that the HttpOnly flag is set for all cookies.</p>",
					"otherinfo": "",
					"reference": "<p>https://owasp.org/www-community/HttpOnly</p>",
					"cweid": "1004",
					"wascid": "13",
					"sourceid": "1"
				},
				{
					"pluginid": "10054",
					"alertRef": "10054-1",
					"alert": "Cookie without SameSite Attribute",
					"name": "Cookie without SameSite Attribute",
					"riskcode": "1",
					"confidence": "2",
					"riskdesc": "Low (Medium)",
					"desc": "<p>A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.</p>",
					"instances":[ 
						{
							"id": "6",
							"uri": "http://hackthissite.org",
							"method": "GET",
							"param": "HackThisSite",
							"attack": "",
							"evidence": "Set-Cookie: HackThisSite",
							"otherinfo": ""
						}
					],
					"count": "1",
					"solution": "<p>Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.</p>",
					"otherinfo": "",
					"reference": "<p>https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site</p>",
					"cweid": "1275",
					"wascid": "13",
					"sourceid": "1"
				},
				{
					"pluginid": "10017",
					"alertRef": "10017",
					"alert": "Cross-Domain JavaScript Source File Inclusion",
					"name": "Cross-Domain JavaScript Source File Inclusion",
					"riskcode": "1",
					"confidence": "2",
					"riskdesc": "Low (Medium)",
					"desc": "<p>The page includes one or more script files from a third-party domain.</p>",
					"instances":[ 
						{
							"id": "8",
							"uri": "http://hackthissite.org",
							"method": "GET",
							"param": "https://data.htscdn.org/js/jquery-1.8.1.min.js",
							"attack": "",
							"evidence": "<script type=\"text/javascript\" src=\"https://data.htscdn.org/js/jquery-1.8.1.min.js\"></script>",
							"otherinfo": ""
						}
					],
					"count": "1",
					"solution": "<p>Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.</p>",
					"otherinfo": "",
					"reference": "",
					"cweid": "829",
					"wascid": "15",
					"sourceid": "1"
				},
				{
					"pluginid": "10021",
					"alertRef": "10021",
					"alert": "X-Content-Type-Options Header Missing",
					"name": "X-Content-Type-Options Header Missing",
					"riskcode": "1",
					"confidence": "2",
					"riskdesc": "Low (Medium)",
					"desc": "<p>The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.</p>",
					"instances":[ 
						{
							"id": "10",
							"uri": "http://hackthissite.org",
							"method": "GET",
							"param": "x-content-type-options",
							"attack": "",
							"evidence": "",
							"otherinfo": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses."
						}
					],
					"count": "1",
					"solution": "<p>Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.</p><p>If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.</p>",
					"otherinfo": "<p>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.</p><p>At \"High\" threshold this scan rule will not alert on client or server error responses.</p>",
					"reference": "<p>https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)</p><p>https://owasp.org/www-community/Security_Headers</p>",
					"cweid": "693",
					"wascid": "15",
					"sourceid": "1"
				},
				{
					"pluginid": "10109",
					"alertRef": "10109",
					"alert": "Modern Web Application",
					"name": "Modern Web Application",
					"riskcode": "0",
					"confidence": "2",
					"riskdesc": "Informational (Medium)",
					"desc": "<p>The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.</p>",
					"instances":[ 
						{
							"id": "9",
							"uri": "http://hackthissite.org",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<a class=\"nav\" href=\"\"></a>",
							"otherinfo": "Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application."
						}
					],
					"count": "1",
					"solution": "<p>This is an informational alert and so no changes are required.</p>",
					"otherinfo": "<p>Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.</p>",
					"reference": "",
					"cweid": "-1",
					"wascid": "-1",
					"sourceid": "1"
				},
				{
					"pluginid": "10112",
					"alertRef": "10112",
					"alert": "Session Management Response Identified",
					"name": "Session Management Response Identified",
					"riskcode": "0",
					"confidence": "2",
					"riskdesc": "Informational (Medium)",
					"desc": "<p>The given response has been identified as containing a session management token. The 'Other Info' field contains a set of header tokens that can be used in the Header Based Session Management Method. If the request is in a context which has a Session Management Method set to \"Auto-Detect\" then this rule will change the session management to use the tokens identified.</p>",
					"instances":[ 
						{
							"id": "11",
							"uri": "http://hackthissite.org",
							"method": "GET",
							"param": "HackThisSite",
							"attack": "",
							"evidence": "u2ajtjmejg4tfe59ktb423cb61",
							"otherinfo": "\ncookie:HackThisSite"
						}
					],
					"count": "1",
					"solution": "<p>This is an informational alert rather than a vulnerability and so there is nothing to fix.</p>",
					"otherinfo": "<p></p><p>cookie:HackThisSite</p>",
					"reference": "<p>https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id</p>",
					"cweid": "-1",
					"wascid": "-1",
					"sourceid": "1"
				},
				{
					"pluginid": "10104",
					"alertRef": "10104",
					"alert": "User Agent Fuzzer",
					"name": "User Agent Fuzzer",
					"riskcode": "0",
					"confidence": "2",
					"riskdesc": "Informational (Medium)",
					"desc": "<p>Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.</p>",
					"instances":[ 
						{
							"id": "70",
							"uri": "http://hackthissite.org",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "63",
							"uri": "http://hackthissite.org",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "57",
							"uri": "http://hackthissite.org",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "74",
							"uri": "http://hackthissite.org",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "78",
							"uri": "http://hackthissite.org",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "96",
							"uri": "http://hackthissite.org",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "93",
							"uri": "http://hackthissite.org",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "81",
							"uri": "http://hackthissite.org",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "84",
							"uri": "http://hackthissite.org",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "90",
							"uri": "http://hackthissite.org",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "87",
							"uri": "http://hackthissite.org",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "82",
							"uri": "http://hackthissite.org",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "73",
							"uri": "http://hackthissite.org/hp.php",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "66",
							"uri": "http://hackthissite.org/hp.php",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "61",
							"uri": "http://hackthissite.org/hp.php",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "79",
							"uri": "http://hackthissite.org/hp.php",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "83",
							"uri": "http://hackthissite.org/hp.php",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "101",
							"uri": "http://hackthissite.org/hp.php",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "99",
							"uri": "http://hackthissite.org/hp.php",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "86",
							"uri": "http://hackthissite.org/hp.php",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "91",
							"uri": "http://hackthissite.org/hp.php",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "97",
							"uri": "http://hackthissite.org/hp.php",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "94",
							"uri": "http://hackthissite.org/hp.php",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "88",
							"uri": "http://hackthissite.org/hp.php",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "59",
							"uri": "http://hackthissite.org/robots.txt",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "58",
							"uri": "http://hackthissite.org/robots.txt",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "56",
							"uri": "http://hackthissite.org/robots.txt",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "60",
							"uri": "http://hackthissite.org/robots.txt",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "64",
							"uri": "http://hackthissite.org/robots.txt",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "76",
							"uri": "http://hackthissite.org/robots.txt",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "75",
							"uri": "http://hackthissite.org/robots.txt",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "65",
							"uri": "http://hackthissite.org/robots.txt",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "68",
							"uri": "http://hackthissite.org/robots.txt",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "72",
							"uri": "http://hackthissite.org/robots.txt",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "71",
							"uri": "http://hackthissite.org/robots.txt",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "67",
							"uri": "http://hackthissite.org/robots.txt",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "77",
							"uri": "http://hackthissite.org/sitemap.xml",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "69",
							"uri": "http://hackthissite.org/sitemap.xml",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "62",
							"uri": "http://hackthissite.org/sitemap.xml",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "80",
							"uri": "http://hackthissite.org/sitemap.xml",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "85",
							"uri": "http://hackthissite.org/sitemap.xml",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "103",
							"uri": "http://hackthissite.org/sitemap.xml",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "102",
							"uri": "http://hackthissite.org/sitemap.xml",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "89",
							"uri": "http://hackthissite.org/sitemap.xml",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "95",
							"uri": "http://hackthissite.org/sitemap.xml",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "100",
							"uri": "http://hackthissite.org/sitemap.xml",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "98",
							"uri": "http://hackthissite.org/sitemap.xml",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "92",
							"uri": "http://hackthissite.org/sitemap.xml",
							"method": "GET",
							"param": "Header User-Agent",
							"attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)",
							"evidence": "",
							"otherinfo": ""
						}
					],
					"count": "48",
					"solution": "",
					"otherinfo": "",
					"reference": "<p>https://owasp.org/wstg</p>",
					"cweid": "0",
					"wascid": "0",
					"sourceid": "153"
				}
			]
		}
	],
	"sequences":[
	]

}
